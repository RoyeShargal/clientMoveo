{"ast":null,"code":"import _slicedToArray from\"/Users/royeshargal/WebstormProjects/Moveo/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useRef,useState}from'react';import Axios from\"axios\";import'./draw.css';import{render}from\"react-dom\";import{wait}from\"@testing-library/user-event/dist/utils\";import Guess from'../guess/Guess';import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";export default function Draw(props){var drawings=[];var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isDrawUp=_useState2[0],setIsDrawUp=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),message=_useState4[0],setMessage=_useState4[1];var canvasRef=useRef(null);var contextRef=useRef(null);var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),sent=_useState6[0],setSent=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),isDrawing=_useState8[0],setIsDrawing=_useState8[1];var _useState9=useState([]),_useState10=_slicedToArray(_useState9,2),drawList=_useState10[0],setDrawList=_useState10[1];var _useState11=useState(0),_useState12=_slicedToArray(_useState11,2),paths=_useState12[0],setPaths=_useState12[1];var _useState13=useState(''),_useState14=_slicedToArray(_useState13,2),choosedWord=_useState14[0],setChoosenWord=_useState14[1];var _useState15=useState(''),_useState16=_slicedToArray(_useState15,2),prefix=_useState16[0],setPrefix=_useState16[1];var _useState17=useState(''),_useState18=_slicedToArray(_useState17,2),correctWord=_useState18[0],setCorrectWord=_useState18[1];var _useState19=useState(''),_useState20=_slicedToArray(_useState19,2),guessedWord=_useState20[0],setGuessedWord=_useState20[1];var _useState21=useState(0),_useState22=_slicedToArray(_useState21,2),game=_useState22[0],setGame=_useState22[1];useEffect(function(){var canvas=canvasRef.current;// canvas.width = (window.innerWidth*2);\n// canvas.height = (window.innerHeight*2);\n// canvas.style.height = `${window.innerHeight}px`;\n// canvas.style.width = `${window.innerWidth}px`;\ncanvas.width=800;canvas.height=600;canvas.style.width='400px';canvas.style.height='300px';var context=canvas.getContext(\"2d\");context.scale(2,2);context.lineCap=\"round\";context.strokeStyle=\"black\";context.lineWidth=5;contextRef.current=context;Axios.get(\"https://moveoroye.herokuapp.com/getword\").then(function(res){setChoosenWord(Object.values(res.data[0])[1]);});var interval=setInterval(function(){{Axios.get(\"https://moveoroye.herokuapp.com/getgame\").then(function(res){setGame(Object.values(res.data[0])[2]);console.log('status is='+Object.values(res.data[0])[2]);if(Object.values(res.data[0])[2]===1){//game finished\n//reset game to undone, i.e. 0\nAxios.post(\"https://moveoroye.herokuapp.com/endgame\",{done:0}).then(function(){Axios.post(\"https://moveoroye.herokuapp.com/newgame\").then(function(x){console.log('game created');clear();window.location.href='/guess';});});}});}},1000);},[]);var startDrawing=function startDrawing(_ref){var nativeEvent=_ref.nativeEvent;var offsetX=nativeEvent.offsetX,offsetY=nativeEvent.offsetY;contextRef.current.beginPath();contextRef.current.moveTo(offsetX,offsetY);setIsDrawing(true);};var finishDrawing=function finishDrawing(){contextRef.current.closePath();setIsDrawing(false);setPaths(paths+1);console.log(paths);console.log(drawList);};var send=function send(){setSent(true);console.log('sending draw');Axios.post(\"https://moveoroye.herokuapp.com/draw\",{drawings:drawList,paths:paths}).then(function(res){});};var clear=function clear(){console.log('clearing draw');// DROP columns in drawings table.\nAxios.post('https://moveoroye.herokuapp.com/deletepaths',{}// don't need to send data\n).then(function(res){console.log('paths deleted');});window.location.reload();};var draw=function draw(_ref2){var nativeEvent=_ref2.nativeEvent;if(!isDrawing){return;}var offsetX=nativeEvent.offsetX,offsetY=nativeEvent.offsetY;drawList.push([paths,offsetX,offsetY]);contextRef.current.lineTo(offsetX,offsetY);contextRef.current.stroke();};return/*#__PURE__*/_jsxs(\"div\",{className:\"draw\",children:[/*#__PURE__*/_jsxs(\"p\",{className:\"draw\",children:[\"Draw \",prefix,\" \",choosedWord,\"!\"]}),/*#__PURE__*/_jsx(\"canvas\",{className:\"canvas\",onMouseDown:startDrawing,onMouseUp:finishDrawing,onMouseMove:draw,ref:canvasRef}),/*#__PURE__*/_jsx(\"p\",{}),/*#__PURE__*/_jsxs(\"div\",{children:[!sent?/*#__PURE__*/_jsx(\"button\",{className:\"btn\",type:\"text\",onClick:send,children:\"Send\"}):/*#__PURE__*/_jsx(\"p\",{}),/*#__PURE__*/_jsx(\"button\",{type:\"text\",className:\"btn\",onClick:clear,children:\"Clear\"})]})]});}","map":{"version":3,"sources":["/Users/royeshargal/WebstormProjects/Moveo/client/src/components/draw/Draw.js"],"names":["React","useEffect","useRef","useState","Axios","render","wait","Guess","Draw","props","drawings","isDrawUp","setIsDrawUp","message","setMessage","canvasRef","contextRef","sent","setSent","isDrawing","setIsDrawing","drawList","setDrawList","paths","setPaths","choosedWord","setChoosenWord","prefix","setPrefix","correctWord","setCorrectWord","guessedWord","setGuessedWord","game","setGame","canvas","current","width","height","style","context","getContext","scale","lineCap","strokeStyle","lineWidth","get","then","res","Object","values","data","interval","setInterval","console","log","post","done","x","clear","window","location","href","startDrawing","nativeEvent","offsetX","offsetY","beginPath","moveTo","finishDrawing","closePath","send","reload","draw","push","lineTo","stroke"],"mappings":"sIAAA,MAAOA,CAAAA,KAAP,EAAeC,SAAf,CAA0BC,MAA1B,CAAkCC,QAAlC,KAAiD,OAAjD,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAO,YAAP,CACA,OAAQC,MAAR,KAAqB,WAArB,CACA,OAAQC,IAAR,KAAmB,wCAAnB,CAEA,MAAOC,CAAAA,KAAP,KAAkB,gBAAlB,C,wFACA,cAAe,SAASC,CAAAA,IAAT,CAAcC,KAAd,CAAoB,CAC/B,GAAIC,CAAAA,QAAQ,CAAG,EAAf,CACA,cAAgCP,QAAQ,CAAC,KAAD,CAAxC,wCAAOQ,QAAP,eAAiBC,WAAjB,eACA,eAA8BT,QAAQ,CAAC,EAAD,CAAtC,yCAAOU,OAAP,eAAgBC,UAAhB,eAEA,GAAMC,CAAAA,SAAS,CAAGb,MAAM,CAAC,IAAD,CAAxB,CACA,GAAMc,CAAAA,UAAU,CAAGd,MAAM,CAAC,IAAD,CAAzB,CACA,eAAuBC,QAAQ,CAAC,KAAD,CAA/B,yCAAOc,IAAP,eAAYC,OAAZ,eACA,eAAiCf,QAAQ,CAAC,KAAD,CAAzC,yCAAOgB,SAAP,eAAiBC,YAAjB,eACA,eAAgCjB,QAAQ,CAAC,EAAD,CAAxC,0CAAOkB,QAAP,gBAAiBC,WAAjB,gBACA,gBAAwBnB,QAAQ,CAAC,CAAD,CAAhC,2CAAMoB,KAAN,gBAAYC,QAAZ,gBACA,gBAAqCrB,QAAQ,CAAC,EAAD,CAA7C,2CAAOsB,WAAP,gBAAmBC,cAAnB,gBACA,gBAA2BvB,QAAQ,CAAC,EAAD,CAAnC,2CAAOwB,MAAP,gBAAcC,SAAd,gBACA,gBAAqCzB,QAAQ,CAAC,EAAD,CAA7C,2CAAO0B,WAAP,gBAAmBC,cAAnB,gBACA,gBAAqC3B,QAAQ,CAAC,EAAD,CAA7C,2CAAO4B,WAAP,gBAAmBC,cAAnB,gBACA,gBAAuB7B,QAAQ,CAAC,CAAD,CAA/B,2CAAO8B,IAAP,gBAAYC,OAAZ,gBAEAjC,SAAS,CAAC,UAAK,CAEX,GAAMkC,CAAAA,MAAM,CAAGpB,SAAS,CAACqB,OAAzB,CACA;AACA;AACA;AACA;AACAD,MAAM,CAACE,KAAP,CAAgB,GAAhB,CACAF,MAAM,CAACG,MAAP,CAAgB,GAAhB,CACAH,MAAM,CAACI,KAAP,CAAaF,KAAb,CAAsB,OAAtB,CACAF,MAAM,CAACI,KAAP,CAAaD,MAAb,CAAsB,OAAtB,CACA,GAAME,CAAAA,OAAO,CAAGL,MAAM,CAACM,UAAP,CAAkB,IAAlB,CAAhB,CACAD,OAAO,CAACE,KAAR,CAAc,CAAd,CAAgB,CAAhB,EACAF,OAAO,CAACG,OAAR,CAAkB,OAAlB,CACAH,OAAO,CAACI,WAAR,CAAoB,OAApB,CACAJ,OAAO,CAACK,SAAR,CAAoB,CAApB,CACA7B,UAAU,CAACoB,OAAX,CAAqBI,OAArB,CAEApC,KAAK,CAAC0C,GAAN,CAAU,yCAAV,EAAqDC,IAArD,CAA0D,SAAAC,GAAG,CAAG,CAC5DtB,cAAc,CAACuB,MAAM,CAACC,MAAP,CAAcF,GAAG,CAACG,IAAJ,CAAS,CAAT,CAAd,EAA2B,CAA3B,CAAD,CAAd,CACH,CAFD,EAIA,GAAMC,CAAAA,QAAQ,CAAGC,WAAW,CAAC,UAAM,CAC/B,CACIjD,KAAK,CAAC0C,GAAN,CAAU,yCAAV,EAAqDC,IAArD,CAA0D,SAAAC,GAAG,CAAG,CAC5Dd,OAAO,CAACe,MAAM,CAACC,MAAP,CAAcF,GAAG,CAACG,IAAJ,CAAS,CAAT,CAAd,EAA2B,CAA3B,CAAD,CAAP,CACAG,OAAO,CAACC,GAAR,CAAY,aAAaN,MAAM,CAACC,MAAP,CAAcF,GAAG,CAACG,IAAJ,CAAS,CAAT,CAAd,EAA2B,CAA3B,CAAzB,EACA,GAAIF,MAAM,CAACC,MAAP,CAAcF,GAAG,CAACG,IAAJ,CAAS,CAAT,CAAd,EAA2B,CAA3B,IAAgC,CAApC,CAAsC,CAClC;AACA;AACA/C,KAAK,CAACoD,IAAN,CAAW,yCAAX,CACI,CAACC,IAAI,CAAC,CAAN,CADJ,EACcV,IADd,CACmB,UAAI,CACnB3C,KAAK,CAACoD,IAAN,CAAW,yCAAX,EAAsDT,IAAtD,CAA2D,SAAAW,CAAC,CAAG,CAC3DJ,OAAO,CAACC,GAAR,CAAY,cAAZ,EACAI,KAAK,GACLC,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAuB,QAAvB,CACH,CAJD,EAMH,CARD,EASH,CACJ,CAhBD,EAiBH,CAEJ,CArB2B,CAqBzB,IArByB,CAA5B,CA2BH,CAjDQ,CAiDP,EAjDO,CAAT,CAmDA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,MAAmB,IAAjBC,CAAAA,WAAiB,MAAjBA,WAAiB,CACpC,GAAMC,CAAAA,OAAN,CAAyBD,WAAzB,CAAMC,OAAN,CAAcC,OAAd,CAAyBF,WAAzB,CAAcE,OAAd,CACAlD,UAAU,CAACoB,OAAX,CAAmB+B,SAAnB,GACAnD,UAAU,CAACoB,OAAX,CAAmBgC,MAAnB,CAA0BH,OAA1B,CAAkCC,OAAlC,EACA9C,YAAY,CAAC,IAAD,CAAZ,CACH,CALD,CAOC,GAAMiD,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,CACzBrD,UAAU,CAACoB,OAAX,CAAmBkC,SAAnB,GACAlD,YAAY,CAAC,KAAD,CAAZ,CACAI,QAAQ,CAACD,KAAK,CAAC,CAAP,CAAR,CACA+B,OAAO,CAACC,GAAR,CAAYhC,KAAZ,EACA+B,OAAO,CAACC,GAAR,CAAYlC,QAAZ,EACH,CANA,CAQD,GAAMkD,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,EAAK,CACdrD,OAAO,CAAC,IAAD,CAAP,CACAoC,OAAO,CAACC,GAAR,CAAY,cAAZ,EACAnD,KAAK,CAACoD,IAAN,CAAW,sCAAX,CAAkD,CAC9C9C,QAAQ,CAAEW,QADoC,CAE9CE,KAAK,CAAEA,KAFuC,CAAlD,EAGGwB,IAHH,CAGQ,SAACC,GAAD,CAAS,CAChB,CAJD,EAMH,CATD,CAWA,GAAMW,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,EAAK,CACfL,OAAO,CAACC,GAAR,CAAY,eAAZ,EACQ;AACAnD,KAAK,CAACoD,IAAN,CAAW,6CAAX,CACI,EAAG;AADP,EAEET,IAFF,CAEO,SAACC,GAAD,CAAQ,CACXM,OAAO,CAACC,GAAR,CAAY,eAAZ,EACH,CAJD,EAKRK,MAAM,CAACC,QAAP,CAAgBW,MAAhB,GAGH,CAXD,CAaA,GAAMC,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,OAAmB,IAAjBT,CAAAA,WAAiB,OAAjBA,WAAiB,CAC5B,GAAG,CAAC7C,SAAJ,CAAc,CACV,OACH,CACD,GAAO8C,CAAAA,OAAP,CAA0BD,WAA1B,CAAOC,OAAP,CAAeC,OAAf,CAA0BF,WAA1B,CAAeE,OAAf,CACA7C,QAAQ,CAACqD,IAAT,CAAc,CAACnD,KAAD,CAAO0C,OAAP,CAAeC,OAAf,CAAd,EACAlD,UAAU,CAACoB,OAAX,CAAmBuC,MAAnB,CAA0BV,OAA1B,CAAkCC,OAAlC,EACAlD,UAAU,CAACoB,OAAX,CAAmBwC,MAAnB,GACH,CARD,CAUA,mBACI,aAAK,SAAS,CAAE,MAAhB,wBACI,WAAG,SAAS,CAAE,MAAd,mBAA4BjD,MAA5B,KAAqCF,WAArC,OADJ,cAEI,eAAQ,SAAS,CAAE,QAAnB,CACA,WAAW,CAAEsC,YADb,CAEA,SAAS,CAAEM,aAFX,CAGA,WAAW,CAAEI,IAHb,CAIA,GAAG,CAAE1D,SAJL,EAFJ,cAOI,YAPJ,cAQQ,uBACK,CAACE,IAAD,cAAQ,eAAQ,SAAS,CAAE,KAAnB,CAA0B,IAAI,CAAC,MAA/B,CAAsC,OAAO,CAAEsD,IAA/C,kBAAR,cACA,YAFL,cAGA,eAAQ,IAAI,CAAC,MAAb,CAAqB,SAAS,CAAE,KAAhC,CAAuC,OAAO,CAAEZ,KAAhD,mBAHA,GARR,GADJ,CAiBH","sourcesContent":["import React, {useEffect, useRef, useState} from 'react'\nimport Axios from \"axios\";\nimport './draw.css'\nimport {render} from \"react-dom\";\nimport {wait} from \"@testing-library/user-event/dist/utils\";\n\nimport Guess from '../guess/Guess'\nexport default function Draw(props){\n    let drawings = []\n    const [isDrawUp, setIsDrawUp] = useState(false)\n    const [message, setMessage] = useState('')\n\n    const canvasRef = useRef(null)\n    const contextRef = useRef(null)\n    const [sent,setSent] = useState(false)\n    const [isDrawing,setIsDrawing] = useState(false)\n    const [drawList, setDrawList] = useState([])\n    const[paths,setPaths] = useState(0)\n    const [choosedWord,setChoosenWord] = useState('')\n    const [prefix,setPrefix] = useState('')\n    const [correctWord,setCorrectWord] = useState('')\n    const [guessedWord,setGuessedWord] = useState('')\n    const [game,setGame] = useState(0)\n\n    useEffect(() =>{\n\n        const canvas = canvasRef.current;\n        // canvas.width = (window.innerWidth*2);\n        // canvas.height = (window.innerHeight*2);\n        // canvas.style.height = `${window.innerHeight}px`;\n        // canvas.style.width = `${window.innerWidth}px`;\n        canvas.width  = 800;\n        canvas.height = 600;\n        canvas.style.width  = '400px';\n        canvas.style.height = '300px';\n        const context = canvas.getContext(\"2d\")\n        context.scale(2,2);\n        context.lineCap = \"round\"\n        context.strokeStyle=\"black\"\n        context.lineWidth = 5;\n        contextRef.current = context;\n\n        Axios.get(\"https://moveoroye.herokuapp.com/getword\").then(res =>{\n            setChoosenWord(Object.values(res.data[0])[1])\n        })\n\n        const interval = setInterval(() => {\n            {\n                Axios.get(\"https://moveoroye.herokuapp.com/getgame\").then(res =>{\n                    setGame(Object.values(res.data[0])[2])\n                    console.log('status is='+Object.values(res.data[0])[2])\n                    if (Object.values(res.data[0])[2]===1){\n                        //game finished\n                        //reset game to undone, i.e. 0\n                        Axios.post(\"https://moveoroye.herokuapp.com/endgame\",\n                            {done:0}).then(()=>{\n                            Axios.post(\"https://moveoroye.herokuapp.com/newgame\").then(x =>{\n                                console.log('game created')\n                                clear()\n                                window.location.href = '/guess'\n                            })\n\n                        })\n                    }\n                })\n            }\n\n        }, 1000)\n\n\n\n\n\n    },[])\n\n    const startDrawing = ({nativeEvent}) => {\n        const{offsetX,offsetY} = nativeEvent;\n        contextRef.current.beginPath()\n        contextRef.current.moveTo(offsetX,offsetY)\n        setIsDrawing(true)\n    }\n\n     const finishDrawing = () => {\n        contextRef.current.closePath()\n        setIsDrawing(false)\n        setPaths(paths+1)\n        console.log(paths)\n        console.log(drawList)\n    }\n\n    const send = () =>{\n        setSent(true)\n        console.log('sending draw')\n        Axios.post(\"https://moveoroye.herokuapp.com/draw\",{\n            drawings: drawList,\n            paths: paths\n        }).then((res) => {\n        });\n\n    }\n\n    const clear = () =>{\n        console.log('clearing draw')\n                // DROP columns in drawings table.\n                Axios.post('https://moveoroye.herokuapp.com/deletepaths',\n                    {} // don't need to send data\n                ).then((res) =>{\n                    console.log('paths deleted')\n                })\n        window.location.reload();\n\n\n    }\n\n    const draw = ({nativeEvent}) => {\n        if(!isDrawing){\n            return\n        }\n        const {offsetX,offsetY} = nativeEvent;\n        drawList.push([paths,offsetX,offsetY]);\n        contextRef.current.lineTo(offsetX,offsetY);\n        contextRef.current.stroke();\n    }\n\n    return(\n        <div className={\"draw\"}>\n            <p className={\"draw\"}>Draw {prefix} {choosedWord}!</p>\n            <canvas className={\"canvas\"}\n            onMouseDown={startDrawing}\n            onMouseUp={finishDrawing}\n            onMouseMove={draw}\n            ref={canvasRef}/>\n            <p/>\n                <div >\n                    {!sent ? <button className={\"btn\"} type=\"text\" onClick={send}>Send</button>\n                    :<p/>}\n                <button type=\"text\"  className={\"btn\"} onClick={clear}>Clear</button>\n                </div>\n\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}