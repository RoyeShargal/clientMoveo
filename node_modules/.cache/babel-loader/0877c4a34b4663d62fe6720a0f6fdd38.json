{"ast":null,"code":"var _jsxFileName = \"/Users/royeshargal/WebstormProjects/Moveo/client/src/components/guess/Guess.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport './guess.css';\nimport Axios from \"axios\";\nimport { wait } from \"@testing-library/user-event/dist/utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Guess(props) {\n  _s();\n\n  let drawings = [];\n  const [message, setMessage] = useState('');\n  const [correctWord, setCorrectWord] = useState('');\n  const [guessedWord, setGuessedWord] = useState('');\n  const [isDrawUp, setIsDrawUp] = useState(false);\n  const [points, setPoints] = useState(0);\n  Axios.defaults.withCredentials = true;\n  const [currPoints, setCurrPoints] = useState(0);\n  useEffect(() => {\n    Axios.post('http://localhost:8000/deletepaths', {} // don't need to send data\n    ).then(res => {\n      console.log('paths deleted');\n    });\n    const canvas = canvasRef.current;\n    canvas.width = 800;\n    canvas.height = 600;\n    canvas.style.width = '400px';\n    canvas.style.height = '300px';\n    const context = canvas.getContext(\"2d\");\n    context.scale(2, 2);\n    context.lineCap = \"round\";\n    context.strokeStyle = \"black\";\n    context.lineWidth = 5;\n    contextRef.current = context;\n    getPoints();\n    const interval = setInterval(() => {\n      if (!isDrawUp) draw();\n      Axios.get(\"http://localhost:8000/getword\").then(res => {\n        setCorrectWord(Object.values(res.data[0])[1]);\n        setPoints(Object.values(res.data[0])[2]);\n      });\n    }, 1000);\n  }, []);\n\n  const getPoints = () => {\n    Axios.get(\"http://localhost:8000/getallpoints\").then(response => {\n      // console.log('hello' + response.data.points)\n      // setCurrPoints(response.data.points)\n      setCurrPoints(parseInt(Object.values(response.data[0])));\n    });\n  }; //create api call to get correctWord chosen by user drawing\n\n\n  const guess = () => {\n    if (correctWord === guessedWord) {\n      Axios.post('http://localhost:8000/setpoints', {\n        points: points\n      }).then(() => {\n        console.log('reached guess to change points');\n      });\n      endGameDeletePaths();\n    } else {\n      console.log('False! the correct word is: ' + correctWord + ' with ' + points + ' points');\n      setMessage('Oops, try again!');\n    }\n  };\n\n  const endGameDeletePaths = () => {\n    Axios.post(\"http://localhost:8000/deletegames\").then(() => {\n      console.log('deleted games');\n    });\n    Axios.post(\"http://localhost:8000/endgame\", {\n      done: 1,\n      points: points\n    }).then(() => {\n      console.log('clearing draw');\n      window.alert('Well done!');\n      window.location.href = '/choose'; // DROP columns in drawings table.\n\n      Axios.post('http://localhost:8000/deletepaths', {} // don't need to send data\n      ).then(res => {\n        console.log('paths deleted');\n      });\n    });\n  };\n\n  const getDrawings = () => {\n    Axios.get(\"http://localhost:8000/getdraw\").then(x => {\n      const pathLength = x.data.length;\n\n      for (let iterator = 0; iterator < pathLength; iterator++) {\n        drawings[iterator] = [Object.values(x.data[iterator])[1], Object.values(x.data[iterator])[2], Object.values(x.data[iterator])[3]];\n      }\n    });\n  };\n\n  const endGame = () => {\n    console.log('ending game');\n    Axios.post(\"http://localhost:8000/newscore\", {\n      score: currPoints\n    }).then(x => {\n      console.log(x.data);\n    }).then(() => {\n      setCurrPoints(0);\n      endGameDeletePaths();\n      window.location.href = \"scores\";\n    });\n  };\n\n  const canvasRef = useRef(null);\n  const contextRef = useRef(null);\n\n  const draw = () => {\n    getDrawings();\n    var i = 0;\n    var currentpath = 0;\n    wait(1000).then(r => {\n      // console.log(drawings.length)\n      contextRef.current.beginPath();\n      contextRef.current.moveTo(drawings[i][1], drawings[1][2]);\n\n      while (i < drawings.length) {\n        while (currentpath === drawings[i][0]) {\n          //console.log(drawings[i][0])\n          contextRef.current.lineTo(drawings[i][1], drawings[i][2]);\n          contextRef.current.stroke();\n          i++;\n        }\n\n        contextRef.current.closePath();\n        contextRef.current.moveTo(drawings[i][1], drawings[1][2]);\n        contextRef.current.beginPath();\n        currentpath++;\n      }\n    });\n    setIsDrawUp(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"guess\",\n    children: [!isNaN(currPoints) ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Current game points \", currPoints]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 46\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      className: \"canvas\",\n      ref: canvasRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"The word worth \", points, \" Points!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Enter your guess\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"guessedWord\",\n      type: \"text\",\n      required: true,\n      minLength: 1,\n      maxLength: 20,\n      onChange: e => {\n        setGuessedWord(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"sub\",\n      onClick: guess,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 17\n    }, this), message.toString() !== '' ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 40\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 59\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: endGame,\n      children: \"End Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Guess, \"M7mJsmkeysvQ01m2/NCGfHe1bF0=\");\n\n_c = Guess;\n\nvar _c;\n\n$RefreshReg$(_c, \"Guess\");","map":{"version":3,"sources":["/Users/royeshargal/WebstormProjects/Moveo/client/src/components/guess/Guess.js"],"names":["React","useEffect","useRef","useState","Axios","wait","Guess","props","drawings","message","setMessage","correctWord","setCorrectWord","guessedWord","setGuessedWord","isDrawUp","setIsDrawUp","points","setPoints","defaults","withCredentials","currPoints","setCurrPoints","post","then","res","console","log","canvas","canvasRef","current","width","height","style","context","getContext","scale","lineCap","strokeStyle","lineWidth","contextRef","getPoints","interval","setInterval","draw","get","Object","values","data","response","parseInt","guess","endGameDeletePaths","done","window","alert","location","href","getDrawings","x","pathLength","length","iterator","endGame","score","i","currentpath","r","beginPath","moveTo","lineTo","stroke","closePath","isNaN","e","target","value","toString"],"mappings":"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","sourcesContent":["import React, {useEffect, useRef, useState} from 'react'\nimport './guess.css'\nimport Axios from \"axios\";\nimport {wait} from \"@testing-library/user-event/dist/utils\";\n\n\nexport default function Guess(props){\n    let drawings = []\n    const [message, setMessage] = useState('')\n    const [correctWord,setCorrectWord] = useState('')\n    const [guessedWord,setGuessedWord] = useState('')\n    const [isDrawUp, setIsDrawUp] = useState(false)\n    const [points,setPoints] = useState(0);\n    Axios.defaults.withCredentials = true;\n    const [currPoints,setCurrPoints] = useState(0)\n\n    useEffect(()=>{\n\n        Axios.post('http://localhost:8000/deletepaths',\n            {} // don't need to send data\n        ).then((res) =>{\n            console.log('paths deleted')\n        })\n        const canvas = canvasRef.current;\n        canvas.width  = 800;\n        canvas.height = 600;\n        canvas.style.width  = '400px';\n        canvas.style.height = '300px';\n        const context = canvas.getContext(\"2d\")\n        context.scale(2,2);\n        context.lineCap = \"round\"\n        context.strokeStyle=\"black\"\n        context.lineWidth = 5;\n        contextRef.current = context;\n\n        getPoints()\n\n        const interval = setInterval(() => {\n            if(!isDrawUp) draw()\n            Axios.get(\"http://localhost:8000/getword\").then(res => {\n                setCorrectWord(Object.values(res.data[0])[1])\n                setPoints(Object.values(res.data[0])[2])\n            })\n\n        }, 1000)\n\n    },[])\n\n    const getPoints = () =>{\n        Axios.get(\"http://localhost:8000/getallpoints\").then((response)=>{\n                // console.log('hello' + response.data.points)\n                // setCurrPoints(response.data.points)\n            setCurrPoints(parseInt(Object.values(response.data[0])))\n            }\n        )\n    }\n\n    //create api call to get correctWord chosen by user drawing\n    const guess = () =>{\n            if(correctWord === guessedWord){\n                Axios.post('http://localhost:8000/setpoints', {points:points}).then(()=>{\n                    console.log('reached guess to change points')\n\n                })\n                endGameDeletePaths()\n            }\n            else{\n                console.log('False! the correct word is: '+correctWord+' with '+ points+' points')\n                setMessage('Oops, try again!')\n            }\n    }\n    const endGameDeletePaths = () =>{\n        Axios.post(\"http://localhost:8000/deletegames\").then(()=>{\n            console.log('deleted games')\n        })\n        Axios.post(\"http://localhost:8000/endgame\",\n            {done:1, points:points}).then(()=>{\n            console.log('clearing draw')\n            window.alert('Well done!')\n            window.location.href = '/choose'\n            // DROP columns in drawings table.\n            Axios.post('http://localhost:8000/deletepaths',\n                {} // don't need to send data\n            ).then((res) =>{\n                console.log('paths deleted')\n            })\n        })\n    }\n    const getDrawings = () =>{\n        Axios.get(\"http://localhost:8000/getdraw\").then((x)=>{\n            const pathLength = (x.data).length\n            for(let iterator=0; iterator<pathLength; iterator++){\n                drawings[iterator] = [Object.values(x.data[iterator])[1],Object.values(x.data[iterator])[2],Object.values(x.data[iterator])[3]]\n            }\n        })\n\n    }\n    const endGame = () =>{\n        console.log('ending game')\n\n        Axios.post(\"http://localhost:8000/newscore\",{score:currPoints}).then((x) =>{\n            console.log(x.data)\n\n        }).then(()=>{\n            setCurrPoints(0)\n            endGameDeletePaths()\n\n            window.location.href =\"scores\"\n        })\n    }\n    const canvasRef = useRef(null)\n    const contextRef = useRef(null)\n\n\n    const draw = () => {\n        getDrawings();\n        var i = 0\n        var currentpath = 0\n        wait(1000).then(r => {\n                // console.log(drawings.length)\n                contextRef.current.beginPath();\n                contextRef.current.moveTo(drawings[i][1], drawings[1][2]);\n                while(i < drawings.length) {\n\n                    while(currentpath === drawings[i][0]){\n                        //console.log(drawings[i][0])\n                        contextRef.current.lineTo(drawings[i][1], drawings[i][2]);\n                        contextRef.current.stroke();\n                    i++\n                }\n                contextRef.current.closePath()\n                contextRef.current.moveTo(drawings[i][1], drawings[1][2]);\n                contextRef.current.beginPath();\n                currentpath++;\n                }\n        })\n        setIsDrawUp(true)\n    }\n\n\n    return(\n        <div className={\"guess\"}>\n            {!isNaN(currPoints) ?            <p>Current game points {currPoints}</p>\n: <p/>            }\n\n            <p/>\n            <canvas className={\"canvas\"}\n                    ref={canvasRef}/>\n            <p/>\n            <p>The word worth {points} Points!</p>\n                <label>Enter your guess</label>\n                <p></p>\n                <input className=\"guessedWord\" type={\"text\"}\n                       required\n                       minLength={1}\n                       maxLength={20}\n                       onChange={(e) => {\n                           setGuessedWord(e.target.value);\n                       }}\n                />\n                <p/>\n                <button className=\"sub\" onClick={guess}>Submit</button>\n            {/*</form>*/}\n            {message.toString()!=='' ? <p>{message}</p> : <p/>}\n            {/*create hints as a feature i.e. number of letters,...*/}\n            <button onClick={endGame}>End Game</button>\n\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}