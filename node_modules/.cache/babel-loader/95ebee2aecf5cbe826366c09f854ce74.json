{"ast":null,"code":"import _slicedToArray from\"/Users/royeshargal/WebstormProjects/Moveo/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useRef,useState}from'react';import'./guess.css';import Axios from\"axios\";import{wait}from\"@testing-library/user-event/dist/utils\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";export default function Guess(props){var drawings=[];var _useState=useState(''),_useState2=_slicedToArray(_useState,2),message=_useState2[0],setMessage=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),correctWord=_useState4[0],setCorrectWord=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),guessedWord=_useState6[0],setGuessedWord=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),isDrawUp=_useState8[0],setIsDrawUp=_useState8[1];var _useState9=useState(0),_useState10=_slicedToArray(_useState9,2),points=_useState10[0],setPoints=_useState10[1];Axios.defaults.withCredentials=true;var _useState11=useState(0),_useState12=_slicedToArray(_useState11,2),currPoints=_useState12[0],setCurrPoints=_useState12[1];useEffect(function(){Axios.post('https://moveoroye.herokuapp.com/deletepaths',{}// don't need to send data\n).then(function(res){console.log('paths deleted');});var canvas=canvasRef.current;canvas.width=800;canvas.height=600;canvas.style.width='400px';canvas.style.height='300px';var context=canvas.getContext(\"2d\");context.scale(2,2);context.lineCap=\"round\";context.strokeStyle=\"black\";context.lineWidth=5;contextRef.current=context;getPoints();var interval=setInterval(function(){if(!isDrawUp)draw();Axios.get(\"https://moveoroye.herokuapp.com/getword\").then(function(res){setCorrectWord(Object.values(res.data[0])[1]);setPoints(Object.values(res.data[0])[2]);});},1000);},[]);var getPoints=function getPoints(){Axios.get(\"https://moveoroye.herokuapp.com/getallpoints\").then(function(response){// console.log('hello' + response.data.points)\n// setCurrPoints(response.data.points)\nsetCurrPoints(parseInt(Object.values(response.data[0])));});};//create api call to get correctWord chosen by user drawing\nvar guess=function guess(){if(correctWord===guessedWord){Axios.post('https://moveoroye.herokuapp.com/setpoints',{points:points}).then(function(){console.log('reached guess to change points');});endGameDeletePathsDeleteWords();}else{console.log('False! the correct word is: '+correctWord+' with '+points+' points');setMessage('Oops, try again!');}};var endGameDeletePathsDeleteWords=function endGameDeletePathsDeleteWords(){Axios.post(\"https://moveoroye.herokuapp.com/deleteallwords\").then(function(){console.log('deleted words');});Axios.post(\"https://moveoroye.herokuapp.com/endgame\",{done:1,points:points}).then(function(){console.log('clearing draw');window.alert('Well done!');window.location.replace('https://moveoroye.herokuapp.com/choose');// DROP columns in drawings table.\nAxios.post('https://moveoroye.herokuapp.com/deletepaths',{}// don't need to send data\n).then(function(res){console.log('paths deleted');});});};var getDrawings=function getDrawings(){Axios.get(\"https://moveoroye.herokuapp.com/getdraw\").then(function(x){var pathLength=x.data.length;for(var iterator=0;iterator<pathLength;iterator++){drawings[iterator]=[Object.values(x.data[iterator])[1],Object.values(x.data[iterator])[2],Object.values(x.data[iterator])[3]];}});};var endGame=function endGame(){console.log('ending game');Axios.post(\"https://moveoroye.herokuapp.com/newscore\",{score:currPoints}).then(function(x){console.log(x.data);}).then(function(){setCurrPoints(0);Axios.post(\"https://moveoroye.herokuapp.com/deletegames\").then(function(){console.log('deleted games');});endGameDeletePathsDeleteWords();window.location.replace('https://moveoroye.herokuapp.com/scores');});};var canvasRef=useRef(null);var contextRef=useRef(null);var draw=function draw(){getDrawings();var i=0;var currentpath=0;wait(1000).then(function(r){// console.log(drawings.length)\ncontextRef.current.beginPath();contextRef.current.moveTo(drawings[i][1],drawings[1][2]);while(i<drawings.length){while(currentpath===drawings[i][0]){//console.log(drawings[i][0])\ncontextRef.current.lineTo(drawings[i][1],drawings[i][2]);contextRef.current.stroke();i++;}contextRef.current.closePath();contextRef.current.moveTo(drawings[i][1],drawings[1][2]);contextRef.current.beginPath();currentpath++;}});setIsDrawUp(true);};return/*#__PURE__*/_jsxs(\"div\",{className:\"guess\",children:[!isNaN(currPoints)?/*#__PURE__*/_jsxs(\"p\",{children:[\"Current game points \",currPoints]}):/*#__PURE__*/_jsx(\"p\",{}),/*#__PURE__*/_jsx(\"p\",{}),/*#__PURE__*/_jsx(\"canvas\",{className:\"canvas\",ref:canvasRef}),/*#__PURE__*/_jsx(\"p\",{}),/*#__PURE__*/_jsxs(\"p\",{children:[\"The word worth \",points,\" Points!\"]}),/*#__PURE__*/_jsx(\"label\",{children:\"Enter your guess\"}),/*#__PURE__*/_jsx(\"p\",{}),/*#__PURE__*/_jsx(\"input\",{className:\"guessedWord\",type:\"text\",required:true,minLength:1,maxLength:20,onChange:function onChange(e){setGuessedWord(e.target.value);}}),/*#__PURE__*/_jsx(\"p\",{}),/*#__PURE__*/_jsx(\"button\",{className:\"btn\",onClick:guess,children:\"Submit\"}),message.toString()!==''?/*#__PURE__*/_jsx(\"p\",{children:message}):/*#__PURE__*/_jsx(\"p\",{}),/*#__PURE__*/_jsx(\"button\",{className:\"btn\",onClick:endGame,children:\"End Game\"})]});}","map":{"version":3,"sources":["/Users/royeshargal/WebstormProjects/Moveo/client/src/components/guess/Guess.js"],"names":["React","useEffect","useRef","useState","Axios","wait","Guess","props","drawings","message","setMessage","correctWord","setCorrectWord","guessedWord","setGuessedWord","isDrawUp","setIsDrawUp","points","setPoints","defaults","withCredentials","currPoints","setCurrPoints","post","then","res","console","log","canvas","canvasRef","current","width","height","style","context","getContext","scale","lineCap","strokeStyle","lineWidth","contextRef","getPoints","interval","setInterval","draw","get","Object","values","data","response","parseInt","guess","endGameDeletePathsDeleteWords","done","window","alert","location","replace","getDrawings","x","pathLength","length","iterator","endGame","score","i","currentpath","r","beginPath","moveTo","lineTo","stroke","closePath","isNaN","e","target","value","toString"],"mappings":"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","sourcesContent":["import React, {useEffect, useRef, useState} from 'react'\nimport './guess.css'\nimport Axios from \"axios\";\nimport {wait} from \"@testing-library/user-event/dist/utils\";\n\n\nexport default function Guess(props){\n    let drawings = []\n    const [message, setMessage] = useState('')\n    const [correctWord,setCorrectWord] = useState('')\n    const [guessedWord,setGuessedWord] = useState('')\n    const [isDrawUp, setIsDrawUp] = useState(false)\n    const [points,setPoints] = useState(0);\n    Axios.defaults.withCredentials = true;\n    const [currPoints,setCurrPoints] = useState(0)\n\n    useEffect(()=>{\n\n        Axios.post('https://moveoroye.herokuapp.com/deletepaths',\n            {} // don't need to send data\n        ).then((res) =>{\n            console.log('paths deleted')\n        })\n        const canvas = canvasRef.current;\n        canvas.width  = 800;\n        canvas.height = 600;\n        canvas.style.width  = '400px';\n        canvas.style.height = '300px';\n        const context = canvas.getContext(\"2d\")\n        context.scale(2,2);\n        context.lineCap = \"round\"\n        context.strokeStyle=\"black\"\n        context.lineWidth = 5;\n        contextRef.current = context;\n\n        getPoints()\n\n        const interval = setInterval(() => {\n            if(!isDrawUp) draw()\n            Axios.get(\"https://moveoroye.herokuapp.com/getword\").then(res => {\n                setCorrectWord(Object.values(res.data[0])[1])\n                setPoints(Object.values(res.data[0])[2])\n            })\n\n        }, 1000)\n\n    },[])\n\n    const getPoints = () =>{\n        Axios.get(\"https://moveoroye.herokuapp.com/getallpoints\").then((response)=>{\n                // console.log('hello' + response.data.points)\n                // setCurrPoints(response.data.points)\n            setCurrPoints(parseInt(Object.values(response.data[0])))\n            }\n        )\n    }\n\n    //create api call to get correctWord chosen by user drawing\n    const guess = () =>{\n            if(correctWord === guessedWord){\n                Axios.post('https://moveoroye.herokuapp.com/setpoints', {points:points}).then(()=>{\n                    console.log('reached guess to change points')\n\n                })\n                endGameDeletePathsDeleteWords()\n            }\n            else{\n                console.log('False! the correct word is: '+correctWord+' with '+ points+' points')\n                setMessage('Oops, try again!')\n            }\n    }\n    const endGameDeletePathsDeleteWords = () =>{\n\n        Axios.post(\"https://moveoroye.herokuapp.com/deleteallwords\").then(()=>{\n            console.log('deleted words')\n        })\n        Axios.post(\"https://moveoroye.herokuapp.com/endgame\",\n            {done:1, points:points}).then(()=>{\n            console.log('clearing draw')\n            window.alert('Well done!')\n            window.location.replace('https://moveoroye.herokuapp.com/choose')\n            // DROP columns in drawings table.\n            Axios.post('https://moveoroye.herokuapp.com/deletepaths',\n                {} // don't need to send data\n            ).then((res) =>{\n                console.log('paths deleted')\n            })\n        })\n    }\n    const getDrawings = () =>{\n        Axios.get(\"https://moveoroye.herokuapp.com/getdraw\").then((x)=>{\n            const pathLength = (x.data).length\n            for(let iterator=0; iterator<pathLength; iterator++){\n                drawings[iterator] = [Object.values(x.data[iterator])[1],Object.values(x.data[iterator])[2],Object.values(x.data[iterator])[3]]\n            }\n        })\n\n    }\n    const endGame = () =>{\n        console.log('ending game')\n\n        Axios.post(\"https://moveoroye.herokuapp.com/newscore\",{score:currPoints}).then((x) =>{\n            console.log(x.data)\n\n        }).then(()=>{\n            setCurrPoints(0)\n            Axios.post(\"https://moveoroye.herokuapp.com/deletegames\").then(()=>{\n                console.log('deleted games')\n            })\n            endGameDeletePathsDeleteWords()\n\n            window.location.replace('https://moveoroye.herokuapp.com/scores')\n        })\n    }\n    const canvasRef = useRef(null)\n    const contextRef = useRef(null)\n\n\n    const draw = () => {\n        getDrawings();\n        var i = 0\n        var currentpath = 0\n        wait(1000).then(r => {\n                // console.log(drawings.length)\n                contextRef.current.beginPath();\n                contextRef.current.moveTo(drawings[i][1], drawings[1][2]);\n                while(i < drawings.length) {\n\n                    while(currentpath === drawings[i][0]){\n                        //console.log(drawings[i][0])\n                        contextRef.current.lineTo(drawings[i][1], drawings[i][2]);\n                        contextRef.current.stroke();\n                    i++\n                }\n                contextRef.current.closePath()\n                contextRef.current.moveTo(drawings[i][1], drawings[1][2]);\n                contextRef.current.beginPath();\n                currentpath++;\n                }\n        })\n        setIsDrawUp(true)\n    }\n\n\n    return(\n        <div className={\"guess\"}>\n            {!isNaN(currPoints) ?            <p>Current game points {currPoints}</p>\n: <p/>            }\n\n            <p/>\n            <canvas className={\"canvas\"}\n                    ref={canvasRef}/>\n            <p/>\n            <p>The word worth {points} Points!</p>\n                <label>Enter your guess</label>\n                <p></p>\n                <input className=\"guessedWord\" type={\"text\"}\n                       required\n                       minLength={1}\n                       maxLength={20}\n                       onChange={(e) => {\n                           setGuessedWord(e.target.value);\n                       }}\n                />\n                <p/>\n                <button className=\"btn\" onClick={guess}>Submit</button>\n            {/*</form>*/}\n            {message.toString()!=='' ? <p>{message}</p> : <p/>}\n            {/*create hints as a feature i.e. number of letters,...*/}\n            <button className={\"btn\"} onClick={endGame}>End Game</button>\n\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}