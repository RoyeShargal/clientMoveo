{"ast":null,"code":"var _jsxFileName = \"/Users/royeshargal/WebstormProjects/Moveo/client/src/components/Words.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport myBook from \"./book.js\";\nimport randomWords from \"random-words\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Words() {\n  _s();\n\n  function wordFreq(string) {\n    var words = string.replace(/[.]/g, '').split(/\\s/);\n    var freqMap = {};\n    words.forEach(function (w) {\n      if (!freqMap[w]) {\n        freqMap[w] = 0;\n      }\n\n      freqMap[w] += 1;\n    });\n    return freqMap;\n  }\n\n  useEffect(() => {\n    const setFreq = wordFreq(myBook);\n  });\n  const [easyWords, setEasyWords] = [];\n\n  const randomWords = require('random-words');\n\n  let words = randomWords(1952);\n  console.log(words.length);\n  console.log(words.length);\n  let easy = [];\n  let medium = [];\n  let hard = [];\n\n  function getSortedHash(inputHash) {\n    var resultHash = {};\n    var keys = Object.keys(inputHash);\n    keys.sort(function (a, b) {\n      return inputHash[a] - inputHash[b];\n    }).forEach(function (k) {\n      resultHash[k] = inputHash[k];\n    });\n    return resultHash;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: setFreq\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Words, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Words;\n\nvar _c;\n\n$RefreshReg$(_c, \"Words\");","map":{"version":3,"sources":["/Users/royeshargal/WebstormProjects/Moveo/client/src/components/Words.js"],"names":["React","useEffect","useState","myBook","randomWords","Words","wordFreq","string","words","replace","split","freqMap","forEach","w","setFreq","easyWords","setEasyWords","require","console","log","length","easy","medium","hard","getSortedHash","inputHash","resultHash","keys","Object","sort","a","b","k"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,WAAP,MAAwB,cAAxB;;AAEA,eAAe,SAASC,KAAT,GAAgB;AAAA;;AAE3B,WAASC,QAAT,CAAkBC,MAAlB,EAA0B;AACtB,QAAIC,KAAK,GAAGD,MAAM,CAACE,OAAP,CAAe,MAAf,EAAuB,EAAvB,EAA2BC,KAA3B,CAAiC,IAAjC,CAAZ;AACA,QAAIC,OAAO,GAAG,EAAd;AACAH,IAAAA,KAAK,CAACI,OAAN,CAAc,UAASC,CAAT,EAAY;AACtB,UAAI,CAACF,OAAO,CAACE,CAAD,CAAZ,EAAiB;AACbF,QAAAA,OAAO,CAACE,CAAD,CAAP,GAAa,CAAb;AACH;;AACDF,MAAAA,OAAO,CAACE,CAAD,CAAP,IAAc,CAAd;AACH,KALD;AAOA,WAAOF,OAAP;AACH;;AACDV,EAAAA,SAAS,CAAC,MAAI;AACX,UAAMa,OAAO,GAAGR,QAAQ,CAACH,MAAD,CAAxB;AACF,GAFQ,CAAT;AAGA,QAAM,CAACY,SAAD,EAAWC,YAAX,IAAyB,EAA/B;;AACA,QAAMZ,WAAW,GAAGa,OAAO,CAAC,cAAD,CAA3B;;AACA,MAAIT,KAAK,GAAGJ,WAAW,CAAC,IAAD,CAAvB;AACAc,EAAAA,OAAO,CAACC,GAAR,CAAYX,KAAK,CAACY,MAAlB;AAEAF,EAAAA,OAAO,CAACC,GAAR,CAAYX,KAAK,CAACY,MAAlB;AACA,MAAIC,IAAI,GAAG,EAAX;AACA,MAAIC,MAAM,GAAG,EAAb;AACA,MAAIC,IAAI,GAAG,EAAX;;AAEA,WAASC,aAAT,CAAuBC,SAAvB,EAAiC;AAC7B,QAAIC,UAAU,GAAG,EAAjB;AAEA,QAAIC,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYF,SAAZ,CAAX;AACAE,IAAAA,IAAI,CAACE,IAAL,CAAU,UAASC,CAAT,EAAYC,CAAZ,EAAe;AACrB,aAAON,SAAS,CAACK,CAAD,CAAT,GAAeL,SAAS,CAACM,CAAD,CAA/B;AACH,KAFD,EAEGnB,OAFH,CAEW,UAASoB,CAAT,EAAY;AACnBN,MAAAA,UAAU,CAACM,CAAD,CAAV,GAAgBP,SAAS,CAACO,CAAD,CAAzB;AACH,KAJD;AAKA,WAAON,UAAP;AACH;;AACD,sBACI;AAAA,cACKZ;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GA3CuBT,K;;KAAAA,K","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport myBook from \"./book.js\";\nimport randomWords from \"random-words\";\n\nexport default function Words(){\n\n    function wordFreq(string) {\n        var words = string.replace(/[.]/g, '').split(/\\s/);\n        var freqMap = {};\n        words.forEach(function(w) {\n            if (!freqMap[w]) {\n                freqMap[w] = 0;\n            }\n            freqMap[w] += 1;\n        });\n\n        return freqMap;\n    }\n    useEffect(()=>{\n       const setFreq = wordFreq(myBook)\n    })\n    const [easyWords,setEasyWords]=[]\n    const randomWords = require('random-words');\n    let words = randomWords(1952);\n    console.log(words.length)\n\n    console.log(words.length)\n    let easy = []\n    let medium = []\n    let hard = []\n\n    function getSortedHash(inputHash){\n        var resultHash = {};\n\n        var keys = Object.keys(inputHash);\n        keys.sort(function(a, b) {\n            return inputHash[a] - inputHash[b]\n        }).forEach(function(k) {\n            resultHash[k] = inputHash[k];\n        });\n        return resultHash;\n    }\n    return(\n        <div>\n            {setFreq}\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}